---
title: "<span style='color: white;'>Scientific visualisation with Python</span>"
author: "<span style='color: white;'>James Emberton, Jack Atkinson</span>"
format: 
  revealjs:
    title-slide-attributes: 
      data-background-image: images/ICCS_title_slide.png
    incremental: true
    auto-stretch: true
    smaller: true
    scrollable: true
    data-background-image: images/ICCS_content_slide.png
  html:
    code-fold: true
jupyter: python3
filters:
  - pyodide
---

## {data-background-image=images/ICCS_content_slide.png}
<div style="margin-top: 100px;", size = "18">
</div>
"The greatest value of a picture is when it forces us to notice what we never expected to see." — John W. Tukey
<br>
<br>
"Data are just summaries of thousands of stories – tell a few of those stories to help make the data meaningful." — Chip & Dan Heath

## {data-background-image=images/ICCS_content_slide.png}
<div style="margin-top: 100px;", size = "18">
</div>
<div class="overlay_contents_page">
  <h2>Summary</h2>
  <p>Principles of good visualisation</p>
  <p>Working with common climate science data formats</p>
  <p>Animating data</p>
</div>

## {data-background-image=images/ICCS_content_slide.png}
<div style="margin-top: 100px;", size = "18">
Anatomy of a Matplotlib plot
<br>
</div>
:::: {.columns}

::: {.column width="50%"}
<img src="images/anatomy_of_a_plot.webp" alt="My Image" style="width:100%; float: left; margin-left: 15px; margin-top: 0px" />
:::

::: {.column width="50%"}
'Figure' is the canvas on which you add one or more axes

<br>

'Axes' is the part of the Figure where information is added

<br>


'Artist' is the base class for all elements that can be added to the axes - 2D line, patch, text

<br>

'Axis' is the x- or y-axis (not to be confused 
with axes)


:::
::::

## {data-background-image="images/ICCS_content_slide.png"}

<div style="margin-top: 50px;", size = "18">
The Matplotlib interface
<br>
<br>
</div>
:::: {.columns}

::: {.column width="50%"}

Pyplot (Implicit)

```python
import matplotlib.pyplot as plt

plt.plot([1, 2, 3], [4, 5, 6])

plt.title('Title')
plt.xlabel('x-label')
plt.ylabel('y-label')

plt.legend()

plt.show()
```
:::
::: {.column width="50%"}
Core Matplotlib (Explicit)
```python
import matplotlib.pyplot as plt

fig = plt.figure()

ax = fig.subplots()
ax.plot([1, 2, 3], [4, 5, 6])

ax.set_title('Title')
ax.set_xlabel('xlabel')
ax.set_ylabel('ylabel')

ax.legend()

plt.show
```
:::
::::

<br>
Plain Pyplot is a simplified interface for quick plotting
<br>
<br>

Explicit approach allows advanced plot customsiation.

## {data-background-image="images/ICCS_content_slide.png"}
<div style="margin-top: 100px;", size = "18">
Matplotlib customisations: Jupyter Lab Exercise 1
</div>
:::: {.columns}
::: {.column}
<img data-src="/images/plt_inset.png" height="250" width="400" />
<img data-src="/images/plt_annot.png" height="250" width="400" />
:::

::: {.column}
<img data-src="/images/plt_dates.png" height="500" width="400" />
:::
::::


## {data-background-image="images/ICCS_content_slide.png"}

<div style="margin-top: 100px;", size = "18">
Plotting NetCDF data with basic Matplotlib commands: Jupyter Lab Exercise 2
</div>
<img data-src="/images/plt_netcdf.png" height="500" width="800" />

## {data-background-image="images/ICCS_content_slide.png"}
<div style="margin-top: 100px;", size = "18">
Introduction to Cartopy
</div>
:::: {.columns}
::: {.column width="50%"}
<br><br>
- Geospatial plotting package built on top of Matplotlib, PROJ, Shapely and NumPy
<br><br>
- Projections and transformations
<br><br>
- Data handling
<br><br>
- Plotting and visualisation
:::
::: {.column width="50%"}
<img data-src="/images/cartopy_image.png" height="300" width="400" />
:::
::::

## {data-background-image="images/ICCS_content_slide.png"}

<div style="margin-top: 100px;", size = "18">
Examples of Cartopy features: Jupyter Lab Exercise 4
</div>

:::: {.columns}

::: {.column}

Geographic maps
<br>
![Global coastline map](/images/Cartopy_coastlines.png){width=500}

<br>

:::

::: {.column}
Feature maps
<br>
![](/images/Cartopy_features.png){width=300}

:::
::::

## {data-background-image="images/ICCS_content_slide.png"}

<div style="margin-top: 100px;", size = "18">
Using Features and Projections in Cartopy
</div>

<img data-src="/images/cartopy_projection_netcdf.png" height="500" width="750" />

# {data-background-image="images/ICCS_content_slide.png"}


# {data-background-image="images/ICCS_content_slide.png"}




